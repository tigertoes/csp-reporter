{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application's resources outside of Lambdas and Api Gateway",
  "Resources": {
    "IamRoleLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamPolicyLambda": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "${stage}-${project}-lambda",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "arn:aws:logs:${region}:*:*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "kinesis:*"
              ],
              "Resource": {
                "Fn::GetAtt": ["CSPKinesisStream", "Arn"]
              }
            },
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "S3Bucket"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRoleLambda"
          }
        ]
      }
    },
    "CSPKinesisStream": {
      "Type": "AWS::Kinesis::Stream",
      "Properties": {
        "Name": "${project}-${stage}",
        "ShardCount": "1"
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": "${project}-${stage}"
      }
    }
  },
  "Outputs": {
    "CSPKinesisStreamName": {
      "Description": "Name of the CSP Kinesis Stream",
      "Value":{
        "Ref": "CSPKinesisStream"
      }
    },
    "CSPKinesisStreamArn": {
      "Description": "ARN for the CSP Kinesis Stream",
      "Value":{
        "Fn::GetAtt": ["CSPKinesisStream", "Arn"]
      }
    },
    "S3BucketName": {
      "Description": "Name of the S3 Bucket",
      "Value": {
        "Ref": "S3Bucket"
      }
    },
    "IamRoleArnLambda": {
      "Description": "ARN of the lambda IAM role",
      "Value": {
        "Fn::GetAtt": [
          "IamRoleLambda",
          "Arn"
        ]
      }
    }
  }
}
